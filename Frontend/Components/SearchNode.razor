<div style="width: 30vw; min-width: 300px;">
    <div class="card border-secondary my-2 mx-2">
        <div class="card-body">
            <h5 class="card-header @Data.HeadColor @Data.HeadTextColor">
                <i class="@Data.HeadIcon" /> &nbsp; @Data.Name
            </h5>
            <div class="card-body">
                <p><b>Genre:</b> @string.Join(", ", element.ElementData.Genres)</p>
                @if (element.ElementData.BookTitle != null)
                {
                    <p><b>Boek:</b> @element.ElementData.BookTitle</p>
                    <p><b>Auteurs/Samenstellers:</b> @string.Join(", ", element.ElementData.Compilers)</p>
                }
                @if (element.ElementData.ArticleTitle != null)
                {
                    <p><b>Artikel:</b> @element.ElementData.ArticleTitle</p>
                    <p><b>Auteurs:</b> @string.Join(", ", element.ElementData.Authors)</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public FileElement element { get; set; }

    protected TypeData Data { get; set; }

    protected override void OnInitialized()
    {
        switch (element.GetType().Name)
        {
            case "Genre": Data = new TypeData("Genre", "oi oi-spreadsheet", "bg-primary"); break;
            case "Book": Data = new TypeData("Boek", "oi oi-book", "bg-secondary"); break;
            case "Article": Data = new TypeData("Artikel", "oi oi-script", "bg-light", "text-dark"); break;
            default: Data = new TypeData("Onbekend soort element, vertel Geerten even dat dit stuk is", "oi oi-circle-x", "text-danger"); break;
        }
    }

    protected class TypeData
    {
        public string Name;
        public string HeadIcon;
        public string HeadColor;
        public string HeadTextColor;

        public TypeData(string name, string headicon, string headcolor, string headtextcolor = "text-white")
        {
            this.Name = name;
            this.HeadIcon = headicon;
            this.HeadColor = headcolor;
            this.HeadTextColor = headtextcolor;
        }
    }
}
