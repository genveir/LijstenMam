@page "/search"

@inject ISearchService SearchService;

<div class="d-flex justify-content-center mt-vh-10">

    <div class="input-group mb-3 w-15">
        <input @bind="searchTerm" @onkeyup="CatchEnter" type="text" class="form-control" placeholder="Type hier je zoekterm">
        <div class="input-group-append">
            <button @onclick="PerformSearch" class="btn btn-outline-secondary" type="button">Zoeken</button>
        </div>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center flex-column">
    <div class="d-flex flex-column align-items-center my-2">
        @foreach (var hit in hits)
        {
            <SearchNode element="hit" />
        }
    </div>
</div>




@code {
    protected string searchTerm;
    protected IEnumerable<FileElement> hits = new List<FileElement>();

    async Task CatchEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter") await PerformSearch();
    }

    async Task PerformSearch()
    {
        hits = await SearchService.Search(searchTerm, new SearchOptions());

        await InvokeAsync(() => StateHasChanged());
    }
}
